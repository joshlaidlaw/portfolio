/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*! responsive-nav.js 1.0.39 by @viljamis */
.nav-collapse ul {
  margin: 0;
  padding: 0;
  width: 100%;
  display: block;
  list-style: none; }

.nav-collapse li {
  width: 100%;
  display: block; }

.js .nav-collapse {
  clip: rect(0 0 0 0);
  max-height: 0;
  position: absolute;
  display: block;
  overflow: hidden;
  zoom: 1; }

.nav-collapse.opened {
  max-height: 9999px; }

.nav-toggle {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none; }

@media screen and (min-width: 40em) {
  .js .nav-collapse {
    position: relative; }
  .js .nav-collapse.closed {
    max-height: none; }
  .nav-toggle {
    display: none; } }

section {
  float: left;
  margin: 0; }
  section::after {
    clear: both;
    content: "";
    display: table; }

.container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 0 15px; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }
  .container::after {
    clear: both;
    content: "";
    display: table; }
  @media (min-width: 768px) {
    .container {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
      padding: 0; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 920px) {
    .container {
      max-width: 920px;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 1100px) {
    .container {
      max-width: 1100px;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 1100px) {
    .container {
      max-width: 1100px;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }

.col1 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col1 {
      width: 6.77966%;
      float: left;
      margin-right: 1.69492%; }
      .col1.last {
        width: 6.77966%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col1 {
      width: 6.77966%;
      float: left;
      margin-right: 1.69492%; }
      .col1:nth-child(even) {
        width: 6.77966%;
        float: left;
        margin-right: 1.69492%; }
      .col1.last {
        width: 6.77966%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col1 {
      width: 6.77966%;
      float: left;
      margin-right: 1.69492%; }
      .col1.last {
        width: 6.77966%;
        float: right;
        margin-right: 0; } }

.col2 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col2 {
      width: 15.25424%;
      float: left;
      margin-right: 1.69492%; }
      .col2.last {
        width: 15.25424%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col2 {
      width: 15.25424%;
      float: left;
      margin-right: 1.69492%; }
      .col2:nth-child(even) {
        width: 15.25424%;
        float: left;
        margin-right: 1.69492%; }
      .col2.last {
        width: 15.25424%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col2 {
      width: 15.25424%;
      float: left;
      margin-right: 1.69492%; }
      .col2.last {
        width: 15.25424%;
        float: right;
        margin-right: 0; } }

.col3 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col3 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; }
      .col3.last,
      .col3:nth-child(even) {
        width: 49.15254%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col3 {
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%; }
      .col3:nth-child(even) {
        width: 23.72881%;
        float: left;
        margin-right: 1.69492%; }
      .col3.last {
        width: 23.72881%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col3 {
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%; }
      .col3.last {
        width: 23.72881%;
        float: right;
        margin-right: 0; } }

.col4 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col4 {
      width: 32.20339%;
      float: left;
      margin-right: 1.69492%; }
      .col4.last {
        width: 32.20339%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col4 {
      width: 32.20339%;
      float: left;
      margin-right: 1.69492%; }
      .col4:nth-child(even) {
        width: 32.20339%;
        float: left;
        margin-right: 1.69492%; }
      .col4.last {
        width: 32.20339%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col4 {
      width: 32.20339%;
      float: left;
      margin-right: 1.69492%; }
      .col4.last {
        width: 32.20339%;
        float: right;
        margin-right: 0; } }

.col5 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col5 {
      width: 40.67797%;
      float: left;
      margin-right: 1.69492%; }
      .col5.last {
        width: 40.67797%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col5 {
      width: 40.67797%;
      float: left;
      margin-right: 1.69492%; }
      .col5:nth-child(even) {
        width: 40.67797%;
        float: left;
        margin-right: 1.69492%; }
      .col5.last {
        width: 40.67797%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col5 {
      width: 40.67797%;
      float: left;
      margin-right: 1.69492%; }
      .col5.last {
        width: 40.67797%;
        float: right;
        margin-right: 0; } }

.col6 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; }
      .col6.last {
        width: 49.15254%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; }
      .col6:nth-child(even) {
        width: 49.15254%;
        float: left;
        margin-right: 1.69492%; }
      .col6.last {
        width: 49.15254%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; }
      .col6.last {
        width: 49.15254%;
        float: right;
        margin-right: 0; } }

.col7 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col7 {
      width: 57.62712%;
      float: left;
      margin-right: 1.69492%; }
      .col7.last {
        width: 57.62712%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col7 {
      width: 57.62712%;
      float: left;
      margin-right: 1.69492%; }
      .col7:nth-child(even) {
        width: 57.62712%;
        float: left;
        margin-right: 1.69492%; }
      .col7.last {
        width: 57.62712%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col7 {
      width: 57.62712%;
      float: left;
      margin-right: 1.69492%; }
      .col7.last {
        width: 57.62712%;
        float: right;
        margin-right: 0; } }

.col8 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col8 {
      width: 66.10169%;
      float: left;
      margin-right: 1.69492%; }
      .col8.last {
        width: 66.10169%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col8 {
      width: 66.10169%;
      float: left;
      margin-right: 1.69492%; }
      .col8:nth-child(even) {
        width: 66.10169%;
        float: left;
        margin-right: 1.69492%; }
      .col8.last {
        width: 66.10169%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col8 {
      width: 66.10169%;
      float: left;
      margin-right: 1.69492%; }
      .col8.last {
        width: 66.10169%;
        float: right;
        margin-right: 0; } }

.col9 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col9 {
      width: 74.57627%;
      float: left;
      margin-right: 1.69492%; }
      .col9.last {
        width: 74.57627%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col9 {
      width: 74.57627%;
      float: left;
      margin-right: 1.69492%; }
      .col9:nth-child(even) {
        width: 74.57627%;
        float: left;
        margin-right: 1.69492%; }
      .col9.last {
        width: 74.57627%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col9 {
      width: 74.57627%;
      float: left;
      margin-right: 1.69492%; }
      .col9.last {
        width: 74.57627%;
        float: right;
        margin-right: 0; } }

.col10 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col10 {
      width: 83.05085%;
      float: left;
      margin-right: 1.69492%; }
      .col10.last {
        width: 83.05085%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col10 {
      width: 83.05085%;
      float: left;
      margin-right: 1.69492%; }
      .col10:nth-child(even) {
        width: 83.05085%;
        float: left;
        margin-right: 1.69492%; }
      .col10.last {
        width: 83.05085%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col10 {
      width: 83.05085%;
      float: left;
      margin-right: 1.69492%; }
      .col10.last {
        width: 83.05085%;
        float: right;
        margin-right: 0; } }

.col11 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col11 {
      width: 91.52542%;
      float: left;
      margin-right: 1.69492%; }
      .col11.last {
        width: 91.52542%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col11 {
      width: 91.52542%;
      float: left;
      margin-right: 1.69492%; }
      .col11:nth-child(even) {
        width: 91.52542%;
        float: left;
        margin-right: 1.69492%; }
      .col11.last {
        width: 91.52542%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col11 {
      width: 91.52542%;
      float: left;
      margin-right: 1.69492%; }
      .col11.last {
        width: 91.52542%;
        float: right;
        margin-right: 0; } }

.col12 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  overflow: hidden; }
  @media (min-width: 768px) {
    .col12 {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; }
      .col12.last {
        width: 100%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 920px) {
    .col12 {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; }
      .col12:nth-child(even) {
        width: 100%;
        float: left;
        margin-left: 0;
        margin-right: 0; }
      .col12.last {
        width: 100%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 1100px) {
    .col12 {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; }
      .col12.last {
        width: 100%;
        float: right;
        margin-right: 0; } }

.m1 {
  margin-bottom: 1em; }

html {
  background-size: cover;
  box-sizing: border-box;
  font-size: 62.5%; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  background-color: #fff;
  height: 100vh; }

@-webkit-keyframes shift-bg-colour {
  0% {
    background-color: #0081cb; }
  50% {
    background-color: #4e008b; }
  100% {
    background-color: #0081cb; } }

@keyframes shift-bg-colour {
  0% {
    background-color: #0081cb; }
  50% {
    background-color: #4e008b; }
  100% {
    background-color: #0081cb; } }

@-webkit-keyframes shift-colour {
  0% {
    color: #0081cb; }
  50% {
    color: #4e008b; }
  100% {
    color: #0081cb; } }

@keyframes shift-colour {
  0% {
    color: #0081cb; }
  50% {
    color: #4e008b; }
  100% {
    color: #0081cb; } }

h1 {
  color: #fff;
  font-family: "GothamRndSSm-Book", sans-serif;
  margin: 0 0 1rem; }

h2 {
  color: #fff;
  font: 3.6rem/1em "GothamRndSSm-Book", "acumin-pro", sans-serif;
  margin: 0; }
  h2.rule {
    border-top: 1px dotted rgba(220, 220, 200, 0.6);
    padding-top: 15px; }

h3 {
  color: #fff;
  font-size: 3.0rem;
  line-height: 1.25em;
  font-weight: normal;
  margin: 0; }

h4 {
  color: rgba(255, 255, 255, 0.25);
  font-size: 1.2rem;
  line-height: 1.25em;
  font-weight: bold;
  margin: 0 0 1em; }

p {
  color: #fff;
  font: 1.8rem/1.5em "GothamRndSSm-Book", "acumin-pro", sans-serif;
  font-weight: 100;
  margin: 0 0 1em; }

a {
  color: #fff;
  font-family: "GothamRndSSm-Book", "acumin-pro", sans-serif;
  font-size: 1em;
  text-decoration: underline; }

.intro {
  font-size: 3.6rem;
  font-weight: 100; }

nav {
  float: left; }
  nav ul {
    float: left;
    margin: 1.8rem 0;
    padding: 0; }
  nav li {
    display: inline-block;
    float: left;
    width: auto; }
    nav li a.current {
      border-bottom-color: #00a1fe;
      cursor: not-allowed; }
    nav li.logo {
      width: 4rem; }
      nav li.logo a {
        border: 0;
        margin: 0; }
      nav li.logo:hover svg {
        fill: #0081cb; }
    nav li a {
      border-bottom: 2px solid #fff;
      color: #0081cb;
      display: block;
      float: left;
      font-size: 1.5rem;
      margin: 0.3rem 0 0 2rem;
      text-decoration: none;
      transition: all 0.5s ease;
      width: auto; }
      nav li a:hover {
        border-bottom-color: rgba(0, 129, 203, 0.5);
        text-decoration: none; }

.btn,
button {
  background: transparent;
  border: 2px solid #fff;
  border-radius: 3px;
  box-sizing: border-box;
  color: #fff;
  font-size: 1.2rem;
  font-weight: bold;
  margin: 0 0 1.5rem;
  padding: .6rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: all 240ms ease; }
  .btn:hover,
  button:hover {
    background: #fff;
    border-color: #fff;
    color: #0081cb; }

header {
  display: block; }

.logo {
  display: block; }
  .logo svg {
    fill: #0081cb;
    float: left;
    height: 3rem;
    margin-right: 1rem;
    transition: all 0.5s ease;
    width: auto; }
  .logo h1 {
    float: left;
    font-size: 2rem;
    margin: 0; }
    .logo h1 a {
      color: #0081cb;
      font-weight: normal;
      text-decoration: none; }

.about {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  background-color: #0081cb;
  color: #fff;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-flow: flex-start;
  -ms-flex-flow: flex-start;
  flex-flow: flex-start;
  padding: 3.6rem 0;
  width: 100%; }
  .about::after {
    clear: both;
    content: "";
    display: table; }
  .about h2 {
    font-size: 3.6rem;
    line-height: 3.6rem;
    font-weight: bold; }
  .about p {
    line-height: 1.5em;
    margin: 0 0 1em; }
    .about p.intro {
      color: #fff;
      font: 3.6rem/1em "GothamRndSSm-Book", sans-serif;
      font-weight: 100;
      margin: 0; }

.work {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  box-sizing: border-box;
  color: #000;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-flow: flex-start;
  -ms-flex-flow: flex-start;
  flex-flow: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 3.6rem 0 0;
  width: 100%; }
  .work::after {
    clear: both;
    content: "";
    display: table; }
  .work .whole {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%; }
  .work .half {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%; }
  .work h2 {
    color: #000;
    font-size: 3.6rem;
    font-weight: bold;
    line-height: 1.25em; }
  .work p {
    line-height: 1.5em;
    margin: 0 0 1em; }
    .work p.intro {
      color: #000;
      font: 3.6rem/1em "GothamRndSSm-Book", sans-serif;
      font-weight: 100;
      margin-bottom: 3.6rem; }

.case-study {
  margin: 0;
  min-height: 285px;
  padding: 1.5rem 1.5rem 0;
  transition: all 240ms linear; }
  .case-study img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 90%; }
  .case-study.stage10 {
    background-color: #ff5000; }
  .case-study.sfu {
    background-color: #f6323e; }
  .case-study.freelance {
    background-color: #00a887; }

.contact {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  background-color: #dad8d6;
  box-shadow: inset 0 5px 0 #0081cb;
  color: #fff;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-flow: flex-start;
  -ms-flex-flow: flex-start;
  flex-flow: flex-start;
  padding: 3.6rem 0;
  width: 100%; }
  .contact::after {
    clear: both;
    content: "";
    display: table; }
  .contact h2 {
    color: #000;
    font-weight: bold; }
  .contact p {
    color: #000;
    font-size: 3.6rem;
    font-weight: 100; }
  .contact a {
    border-bottom: 2px solid #fff;
    color: #0081cb;
    font-weight: normal;
    text-decoration: none;
    text-transform: none;
    transition: border-bottom-color 240ms linear; }
    .contact a:hover {
      border-bottom-color: #0081cb; }

/*# sourceMappingURL=data:application/json;base64, */